// Copyright Â© 2023 Thomas Rabaix <thomas.rabaix@gmail.com>.
//
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file.

// This file is autogenerated by GoLocales by processing the 
// CLDR data.

package {{.Code}}

import (
    "github.com/rande/golocales"
    {{ if .Locale.Parent -}}
        "github.com/rande/golocales/locales/{{ .Locale.Parent.Code }}"
    {{- end -}}
)

var locale = &golocales.Locale{
    Name: "{{.Code}}",
    {{- if .Locale.Parent }}
    Parent: {{ .Locale.Parent.Code }}.Locale(),
    {{- end }}
    Territories: map[string]golocales.Territory{
        {{- range .Territories -}}
            "{{.Code}}": "{{.Name}}",
        {{- end -}}
    },
    Currencies: map[string]golocales.Currency{
        {{- range .Currencies -}}
            "{{.Code}}": "{{.Name}}",
        {{- end -}}
    },
    TimeZones: map[string]golocales.TimeZone{
        {{- range .TimeZones -}}
            "{{.Code}}": "{{.Name}}",
        {{- end -}}
    },
    Symbols: map[golocales.NumberSystem]*golocales.Symbol{
        {{ range .Symbols -}}
            "{{.System}}": {
                System:"{{.System}}",
                MinusSign:"{{.MinusSign}}",
                PlusSign:"{{.PlusSign}}",
                Exponential:"{{.Exponential}}",
                SuperscriptingExponent:"{{.SuperscriptingExponent}}",
                Decimal:"{{.Decimal}}",
                Group: "{{.Group}}",
                PercentSign: "{{.PercentSign}}",
                PerMilleSign:"{{.PerMilleSign}}",
                ApproximatelySign: "{{.ApproximatelySign}}",
                Infinity: "{{.Infinity}}",
                TimeSeparator: "{{.TimeSeparator}}",
            },
        {{ end -}}
    },
    MinimumGroupingDigits: {{ .Locale.MinimumGroupingDigits }},
	DefaultNumberSystem: "{{ .Locale.DefaultNumberSystem }}",
{{ if .Locale.Decimals }}
    Decimal: map[golocales.NumberSystem]golocales.FormatGroup{
        {{- range $key, $value := .Locale.Decimals }}
            golocales.NumberSystem("{{$key}}"): golocales.FormatGroup{
                {{ if .Long }}
                Long: []*golocales.NumberFormat{
                    {{- range .Long -}}
                            {Type: "{{.Type}}",Count: "{{.Count}}",Pattern: "{{.Pattern}}",PrimaryGroupingSize: {{.PrimaryGroupingSize}}, SecondaryGroupingSize: {{ .SecondaryGroupingSize }}, StandardPattern: "{{ .StandardPattern }}"},
                    {{ end -}}
                },
                {{- else -}}
                // Long is empty
                {{- end }}
                {{ if .Short }}
                Short: []*golocales.NumberFormat{
                    {{- range .Short -}}
                            {Type: "{{.Type}}",Count: "{{.Count}}",Pattern: "{{.Pattern}}",PrimaryGroupingSize: {{.PrimaryGroupingSize}}, SecondaryGroupingSize: {{ .SecondaryGroupingSize }}, StandardPattern: "{{ .StandardPattern }}"},
                    {{ end -}}
                },
                {{- else -}}
                // Short is empty
                {{- end }}
                {{ if .Default }}
                Default: []*golocales.NumberFormat{
                    {{- range .Default -}}
                            {Type: "{{.Type}}",Count: "{{.Count}}",Pattern: "{{.Pattern}}",PrimaryGroupingSize: {{.PrimaryGroupingSize}}, SecondaryGroupingSize: {{ .SecondaryGroupingSize }}, StandardPattern: "{{ .StandardPattern }}"},
                    {{ end -}}
                },
                {{- else -}}
                // Default is empty
                {{- end }}
            },
        {{- end -}}
    },
{{ else }}
// Decimal is empty
{{ end }}
}

func Locale() *golocales.Locale {
    return locale
}